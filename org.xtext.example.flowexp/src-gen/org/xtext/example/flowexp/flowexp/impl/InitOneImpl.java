/**
 * generated by Xtext 2.15.0
 */
package org.xtext.example.flowexp.flowexp.impl;

import java.util.Collection;

import org.eclipse.emf.common.notify.Notification;

import org.eclipse.emf.common.util.EList;

import org.eclipse.emf.ecore.EClass;

import org.eclipse.emf.ecore.impl.ENotificationImpl;

import org.eclipse.emf.ecore.util.EDataTypeEList;

import org.xtext.example.flowexp.flowexp.FlowexpPackage;
import org.xtext.example.flowexp.flowexp.InitOne;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Init One</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link org.xtext.example.flowexp.flowexp.impl.InitOneImpl#getFilename <em>Filename</em>}</li>
 *   <li>{@link org.xtext.example.flowexp.flowexp.impl.InitOneImpl#getTval <em>Tval</em>}</li>
 *   <li>{@link org.xtext.example.flowexp.flowexp.impl.InitOneImpl#getPval <em>Pval</em>}</li>
 *   <li>{@link org.xtext.example.flowexp.flowexp.impl.InitOneImpl#getSrval <em>Srval</em>}</li>
 * </ul>
 *
 * @generated
 */
public class InitOneImpl extends InitImpl implements InitOne
{
  /**
   * The cached value of the '{@link #getFilename() <em>Filename</em>}' attribute list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getFilename()
   * @generated
   * @ordered
   */
  protected EList<String> filename;

  /**
   * The default value of the '{@link #getTval() <em>Tval</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getTval()
   * @generated
   * @ordered
   */
  protected static final int TVAL_EDEFAULT = 0;

  /**
   * The cached value of the '{@link #getTval() <em>Tval</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getTval()
   * @generated
   * @ordered
   */
  protected int tval = TVAL_EDEFAULT;

  /**
   * The default value of the '{@link #getPval() <em>Pval</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getPval()
   * @generated
   * @ordered
   */
  protected static final int PVAL_EDEFAULT = 0;

  /**
   * The cached value of the '{@link #getPval() <em>Pval</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getPval()
   * @generated
   * @ordered
   */
  protected int pval = PVAL_EDEFAULT;

  /**
   * The default value of the '{@link #getSrval() <em>Srval</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getSrval()
   * @generated
   * @ordered
   */
  protected static final int SRVAL_EDEFAULT = 0;

  /**
   * The cached value of the '{@link #getSrval() <em>Srval</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getSrval()
   * @generated
   * @ordered
   */
  protected int srval = SRVAL_EDEFAULT;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected InitOneImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return FlowexpPackage.Literals.INIT_ONE;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EList<String> getFilename()
  {
    if (filename == null)
    {
      filename = new EDataTypeEList<String>(String.class, this, FlowexpPackage.INIT_ONE__FILENAME);
    }
    return filename;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public int getTval()
  {
    return tval;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setTval(int newTval)
  {
    int oldTval = tval;
    tval = newTval;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, FlowexpPackage.INIT_ONE__TVAL, oldTval, tval));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public int getPval()
  {
    return pval;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setPval(int newPval)
  {
    int oldPval = pval;
    pval = newPval;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, FlowexpPackage.INIT_ONE__PVAL, oldPval, pval));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public int getSrval()
  {
    return srval;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setSrval(int newSrval)
  {
    int oldSrval = srval;
    srval = newSrval;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, FlowexpPackage.INIT_ONE__SRVAL, oldSrval, srval));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case FlowexpPackage.INIT_ONE__FILENAME:
        return getFilename();
      case FlowexpPackage.INIT_ONE__TVAL:
        return getTval();
      case FlowexpPackage.INIT_ONE__PVAL:
        return getPval();
      case FlowexpPackage.INIT_ONE__SRVAL:
        return getSrval();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @SuppressWarnings("unchecked")
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case FlowexpPackage.INIT_ONE__FILENAME:
        getFilename().clear();
        getFilename().addAll((Collection<? extends String>)newValue);
        return;
      case FlowexpPackage.INIT_ONE__TVAL:
        setTval((Integer)newValue);
        return;
      case FlowexpPackage.INIT_ONE__PVAL:
        setPval((Integer)newValue);
        return;
      case FlowexpPackage.INIT_ONE__SRVAL:
        setSrval((Integer)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case FlowexpPackage.INIT_ONE__FILENAME:
        getFilename().clear();
        return;
      case FlowexpPackage.INIT_ONE__TVAL:
        setTval(TVAL_EDEFAULT);
        return;
      case FlowexpPackage.INIT_ONE__PVAL:
        setPval(PVAL_EDEFAULT);
        return;
      case FlowexpPackage.INIT_ONE__SRVAL:
        setSrval(SRVAL_EDEFAULT);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case FlowexpPackage.INIT_ONE__FILENAME:
        return filename != null && !filename.isEmpty();
      case FlowexpPackage.INIT_ONE__TVAL:
        return tval != TVAL_EDEFAULT;
      case FlowexpPackage.INIT_ONE__PVAL:
        return pval != PVAL_EDEFAULT;
      case FlowexpPackage.INIT_ONE__SRVAL:
        return srval != SRVAL_EDEFAULT;
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuilder result = new StringBuilder(super.toString());
    result.append(" (filename: ");
    result.append(filename);
    result.append(", tval: ");
    result.append(tval);
    result.append(", pval: ");
    result.append(pval);
    result.append(", srval: ");
    result.append(srval);
    result.append(')');
    return result.toString();
  }

} //InitOneImpl
